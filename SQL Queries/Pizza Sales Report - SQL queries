Problem Statement: 
Analyze Key Indicators for pizza sales data to gain insights into business performance. 

KPI's (Potential): 
1. Total Revenue: Sum of total price of all pizza orders
    a. -- total revenue of all the pizza orders
          select sum(total_price) as total_revenue
          from pizza_sales
    b. Output cols: total_revenue

2. Average order value: Average amount spent per order. Calculation: total_revenue/total_#_orders 
    a. select sum(total_price)/count(distinct order_id) as avg_ord_val
        from pizza_sales
    b. output cols: avg_ord_val

3. Total Pizzas sold: sum of quantities of all pizzas sold. 
    a. select sum(quantity) as total_quantity
        from pizza_sales
    b. output cols: total_quantity

4. Total orders: total number of orders placed. 
    a. select count(distinct order_id ) as total_orders_placed
        from pizza_sales
    b. output cols: total_orders_placed

5. average pizzas per order: average number of pizzas sold per order. calculation: total_#_pizzas_sold/ total_#_orders
    a. select CAST(CAST(sum(quantity) as decimal(10,2)) /CAST(count(distinct order_id) as decimal(10,2)) as decimal(10,2)) as avg_order_quantity
        from pizza_sales
    b. output cols: avg_order_quantity

Data Visualizations: 

1. Daily trend of Total orders: 
  a. showcase trend of total orders on a daily basis. 
  b.  select datename(dw, order_date) as day_of_week,count(distinct order_id) as total_orders, sum(quantity) as total_ordered_quantity 
      from pizza_sales
      group by datename(dw, order_date)

      select datename(MONTH, order_date) as day_of_week,count(distinct order_id) as total_orders, sum(quantity) as total_ordered_quantity 
      from pizza_sales
      group by datename(MONTH, order_date)
      order by 2 desc

2. Hourly trend for total orders: 
  a. showcase total orders trend by hourly basis. 

3. % of Sales by Pizza Category
  a. Distribution of sales across different pizza categories. understand popularity of various pizzas and contribution towards sales. 
  b. select distinct pizza_category, 
      cast( sum(total_price) over (partition by pizza_category) as decimal(10,2)) as total_revenue,
      cast((sum(total_price) over (partition by pizza_category)/(select sum(total_price) from pizza_sales))*100 as decimal(10,2)) as PCT
      from pizza_sales
      order by 3 desc

4. % of Sales by Pizza Size with a filter for quarter
  a. Distribution of sales across different pizza categories. understand popularity of various pizzas and contribution towards sales. 
  b. select distinct pizza_size, 
      cast( sum(total_price) over (partition by pizza_size) as decimal(10,2)) as total_revenue,
      cast((sum(total_price) over (partition by pizza_size)/(select sum(total_price) from pizza_sales where DATEPART(QUARTER, order_date) = 1))*100 as decimal(10,2)) as PCT
      from pizza_sales
      where DATEPART(QUARTER, order_date) = 1
      order by 3 desc

      select pizza_size, 
      sum(total_price) AS total_revenue, 
      (sum(total_price)*100/(select sum(total_price) from pizza_sales where DATEPART(QUARTER, order_date) = 1)) as PCT
      from pizza_sales
      where DATEPART(QUARTER, order_date) = 1
      group by pizza_size

5. Top 5 best sellers by revenue, total quantity and total orders
  a. SELECT Top 5 pizza_name, SUM(total_price) AS Total_Revenue
      FROM pizza_sales
      GROUP BY pizza_name
      ORDER BY Total_Revenue DESC

  b. SELECT Top 5 pizza_name, SUM(quantity) AS Total_Pizza_Sold
      FROM pizza_sales
      GROUP BY pizza_name
      ORDER BY Total_Pizza_Sold DESC

  c. SELECT Top 5 pizza_name, COUNT(DISTINCT order_id) AS Total_Orders
      FROM pizza_sales
      GROUP BY pizza_name
      ORDER BY Total_Orders DESC

6. Bottom 5 sellers by revenue, total quantity and total orders
  a. SELECT Top 5 pizza_name, SUM(total_price) AS Total_Revenue
      FROM pizza_sales
      GROUP BY pizza_name
      ORDER BY Total_Revenue ASC

  b. SELECT TOP 5 pizza_name, SUM(quantity) AS Total_Pizza_Sold
      FROM pizza_sales
      GROUP BY pizza_name
      ORDER BY Total_Pizza_Sold ASC

  c. SELECT Top 5 pizza_name, COUNT(DISTINCT order_id) AS Total_Orders
      FROM pizza_sales
      GROUP BY pizza_name
      ORDER BY Total_Orders ASC






